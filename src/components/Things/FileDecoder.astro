---
import '../../styles/global.css'
---

<div class="select-none">File to Base64</div>
<form id="forms" class="space-y-2 w-full px-4 max-w-lg mx-auto">
  <textarea id="decodedResult" class="h-40 comfy-text-area"></textarea>
  <div class="text-right">
    <label for="filePicker" class="submit-button">Choose a file</label>
  </div>
  <input id="filePicker" type="file" class="hidden" />
</form>

<script>
  const getFilePicker = () => document.getElementById('filePicker')
  const getTextArea = () =>
    document.getElementById('decodedResult') as HTMLTextAreaElement | null

  const resetFilePicker = () => {
    const filePicker = getFilePicker()
    if (filePicker instanceof HTMLInputElement) {
      filePicker.value = ''
    }
  }

  const initializeTextArea = () => {
    const textArea = getTextArea()
    if (textArea) textArea.value = ''

    const filePicker = getFilePicker()
    if (filePicker instanceof HTMLInputElement) {
      filePicker.addEventListener('change', encode)
    }
    selectAll()
  }

  const selectAll = () => {
    const textArea = getTextArea()
    if (textArea) {
      setTimeout(() => {
        textArea.addEventListener('click', () => textArea.select())
        textArea.addEventListener('focus', () => textArea.select())
      }, 50)
    }
  }

  const encode = () => {
    const filePicker = getFilePicker()
    if (
      !(filePicker instanceof HTMLInputElement) ||
      !filePicker.files ||
      filePicker.files.length < 1
    ) {
      return
    }

    const file = filePicker.files[0]
    const fileReader = new FileReader()

    fileReader.onload = () => {
      const form = document.getElementById(
        'decodedResult'
      ) as HTMLTextAreaElement | null
      const base64 = fileReader.result

      if (form && typeof base64 === 'string') {
        form.value = base64
      }
    }

    fileReader.readAsDataURL(file)
    resetFilePicker()
  }

  document.addEventListener('DOMContentLoaded', initializeTextArea)
  document.addEventListener('astro:after-swap', initializeTextArea)
</script>
